=begin
#PacerPro

#PacerPro API documentation.

OpenAPI spec version: 0.5.0
Contact: ken@pacerpro.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::MattersApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'MattersApi' do
  before do
    # run before each test
    @instance = SwaggerClient::MattersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MattersApi' do
    it 'should create an instact of MattersApi' do
      expect(@instance).to be_instance_of(SwaggerClient::MattersApi)
    end
  end

  # unit tests for matters_get_collection
  # A collection of matters.
  # Get all matters relevant to the firm.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization Bearer {...JSON Web Token...}
  # @option opts [DateTime] :activity_at The time of last activity in the case.
  # @option opts [String] :court_type The court type (district, bankruptcy or appellate.)
  # @option opts [String] :has_client_matter_number If &#39;yes&#39; or &#39;no&#39;, restricts results to matters that have or do not have a client matter number.
  # @option opts [Integer] :page Page number
  # @option opts [Integer] :limit Limit number of objects returned per page
  # @return [Array<Matter>]
  describe 'matters_get_collection test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for matters_get_one
  # A single matter.
  # Get a single matter, specified by &#x60;matterId&#x60; in the path.
  # @param matter_id The database identifier of the matter.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization Bearer {...JSON Web Token...}
  # @return [Matter]
  describe 'matters_get_one test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
